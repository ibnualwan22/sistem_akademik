"""
Django settings for sistem_akademik project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

# =======================
# SECRET / DEBUG dari ENV
# =======================
from pathlib import Path
import os, logging.config, json
from datetime import timedelta, date
import logging.config

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = os.environ.get('SECRET_KEY', 'REPLACE_ME_IN_LOCAL')
DEBUG      = os.environ.get('DEBUG', 'False').lower() == 'true'

# =======================
# ALLOWED_HOSTS
# =======================
# settings.py  (bagian atas)
ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

external_host = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if external_host:
    ALLOWED_HOSTS.append(external_host)

extra_hosts = os.environ.get('ALLOWED_HOSTS')  # env var berisi daftar host
if extra_hosts:
    ALLOWED_HOSTS += [h.strip() for h in extra_hosts.split(',') if h.strip()]


# 2) Host tambahan dari ENV custom (mis. ALLOWED_HOSTS="dom1.com,dom2.com")
ALLOWED_HOSTS_STR = os.environ.get("ALLOWED_HOSTS")
if ALLOWED_HOSTS_STR:
    ALLOWED_HOSTS.extend([h.strip() for h in ALLOWED_HOSTS_STR.split(',') if h.strip()])

# 3) Host untuk lokal/development
ALLOWED_HOSTS += ["127.0.0.1", "localhost"]

# =======================
# Base dir
# =======================
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-((a*j(#)%bv4#*j_mc_!m24+6(jbhj5v)fn5za4878x8ljdj+f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['sistem-akademik-iafk.onrender.com', '127.0.0.1', 'localhost']



# Application definition


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,  # biarkan logger default hidup
    'formatters': {
        'simple': {
            'format': '[{levelname}] {name} – {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        # Logger bawaan Django (opsional, agar lebih ringkas)
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
        },
        # Logger aplikasi kita (nama modul = 'core')
        'core': {
            'handlers': ['console'],
            'level': 'DEBUG',  # ubah ke INFO di produksi
            'propagate': False,
        },
    },
}
ROOT_URLCONF = 'sistem_akademik.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sistem_akademik.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https:///docs.djangoproject.com/en/5.2/howto/static-files/

# ✅ Static files untuk production
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Tempat hasil collectstatic
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Pengaturan untuk User-Uploaded Media Files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# sistem_akademik/settings.py

# sistem_akademik/settings.py

# sistem_akademik/settings.py

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Aplikasi kita sendiri
    'core.apps.CoreConfig',
]